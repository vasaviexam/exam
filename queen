###Week-7    --  36 lines

def isSafe(row, col, n, board):
    j = 1
    while row-j>-1 and col-j>-1:
        if board[row-j][col-j]=='Q':
            return False
        j += 1
    j = 1
    while row+j<n and col-j>-1:
        if board[row+j][col-j]=='Q':
            return False
        j += 1
    return True

def n_queens(vis, col, n, board):
    if col==n:
        return board
    for row in range(n):
        if vis[row]==1:
            continue
        vis[row] = 1
        board[row][col]='Q'
        if isSafe(row, col, n, board):
            res = n_queens(vis, col+1, n, board)
            if res!=[]: return res
        board[row][col]='_'
        vis[row]=0
    return []


n = int(input("Enter n : "))
board = [['_' for k in range(n)] for j in range(n)]
board = n_queens([0]*n, 0, n, board)
for row in  board:
    print(row)
